{"ast":null,"code":"var _jsxFileName = \"/home/praveen/polynomialai/Poly-Agent/Poly-Agent_frontend/src/pages/CheckLogsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport '../styles/Dashboard.css';\nimport '../styles/HealthCheck.css';\nimport logo from '../assets/Poly-Agent_logo.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckLogsPage = () => {\n  _s();\n  const [check, setCheck] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const {\n    checkId\n  } = useParams();\n  const navigate = useNavigate();\n  const logsPerPage = 20;\n  useEffect(() => {\n    const fetchCheckLogs = async () => {\n      try {\n        // Fetch check details\n        const checkResponse = await fetch(`/health/api/checks/${checkId}/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (!checkResponse.ok) {\n          throw new Error('Failed to fetch check details');\n        }\n        const checkData = await checkResponse.json();\n        setCheck(checkData);\n\n        // Fetch check logs with pagination\n        const logsResponse = await fetch(`/health/api/checks/${checkId}/logs/?page=${currentPage}&page_size=${logsPerPage}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (!logsResponse.ok) {\n          throw new Error('Failed to fetch check logs');\n        }\n        const logsData = await logsResponse.json();\n\n        // Handle pagination data\n        if (logsData.results && Array.isArray(logsData.results)) {\n          setLogs(logsData.results);\n          setTotalPages(Math.ceil(logsData.count / logsPerPage));\n        } else if (Array.isArray(logsData)) {\n          // If the API doesn't return paginated data, handle the array directly\n          setLogs(logsData);\n          setTotalPages(Math.ceil(logsData.length / logsPerPage));\n        } else {\n          console.error('Unexpected logs response format:', logsData);\n          setLogs([]);\n          setTotalPages(1);\n        }\n      } catch (err) {\n        console.error('Error fetching check logs:', err);\n        setError(err.message || 'An error occurred while fetching check logs');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCheckLogs();\n  }, [checkId, currentPage, logsPerPage]);\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/users/logout/', {\n        method: 'POST',\n        credentials: 'include'\n      });\n\n      // Clear local storage and state\n      localStorage.removeItem('user');\n\n      // Redirect to login page\n      navigate('/login');\n    } catch (err) {\n      console.error('Logout failed:', err);\n      setError('Failed to logout. Please try again.');\n    }\n  };\n  const handlePageChange = page => {\n    if (page < 1 || page > totalPages) return;\n    setCurrentPage(page);\n  };\n  const formatTime = timeString => {\n    if (!timeString) return 'N/A';\n    const date = new Date(timeString);\n    return date.toLocaleString();\n  };\n  const getStatusClass = status => {\n    return status ? 'status-up' : 'status-down';\n  };\n  const getStatusText = status => {\n    return status ? 'Up' : 'Down';\n  };\n  const getResponseTimeDisplay = time => {\n    if (time === null || time === undefined) return 'N/A';\n    return `${time.toFixed(2)} ms`;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading check logs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please try refreshing the page or contact support if the problem persists.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/health-checks'),\n        className: \"btn btn-primary\",\n        children: \"Back to Health Checks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  if (!check) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: \"Check not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/health-checks'),\n        className: \"btn btn-primary\",\n        children: \"Back to Health Checks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Poly-Agent Logo\",\n          className: \"dashboard-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Check Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"dashboard-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"nav-link\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/health-checks\",\n            className: \"nav-link\",\n            children: \"Health Checks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            className: \"nav-link\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-logs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [check.name, \" - Logs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/check/${checkId}`,\n          className: \"btn btn-secondary\",\n          children: \"Back to Check Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-logs-container\",\n        children: [logs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logs-table-card\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"logs-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Response Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatTime(log.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `status-badge ${getStatusClass(log.status)}`,\n                    children: getStatusText(log.status)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getResponseTimeDisplay(log.response_time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: log.status_code || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"log-error\",\n                  children: log.error || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-logs-message\",\n          children: \"No logs available for this check.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage - 1),\n            disabled: currentPage === 1,\n            className: \"pagination-btn\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-info\",\n            children: [\"Page \", currentPage, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage + 1),\n            disabled: currentPage === totalPages,\n            className: \"pagination-btn\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckLogsPage, \"X2nBURVG03x8LoKKVD/2rrVTMHY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CheckLogsPage;\nexport default CheckLogsPage;\nvar _c;\n$RefreshReg$(_c, \"CheckLogsPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","logo","jsxDEV","_jsxDEV","CheckLogsPage","_s","check","setCheck","logs","setLogs","isLoading","setIsLoading","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","checkId","navigate","logsPerPage","fetchCheckLogs","checkResponse","fetch","method","headers","credentials","ok","Error","checkData","json","logsResponse","logsData","results","Array","isArray","Math","ceil","count","length","console","err","message","handleLogout","localStorage","removeItem","handlePageChange","page","formatTime","timeString","date","Date","toLocaleString","getStatusClass","status","getStatusText","getResponseTimeDisplay","time","undefined","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","to","name","map","log","index","timestamp","response_time","status_code","disabled","_c","$RefreshReg$"],"sources":["/home/praveen/polynomialai/Poly-Agent/Poly-Agent_frontend/src/pages/CheckLogsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport '../styles/Dashboard.css';\nimport '../styles/HealthCheck.css';\nimport logo from '../assets/Poly-Agent_logo.jpeg';\n\nconst CheckLogsPage = () => {\n  const [check, setCheck] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const { checkId } = useParams();\n  const navigate = useNavigate();\n  const logsPerPage = 20;\n\n  useEffect(() => {\n    const fetchCheckLogs = async () => {\n      try {\n        // Fetch check details\n        const checkResponse = await fetch(`/health/api/checks/${checkId}/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n        });\n\n        if (!checkResponse.ok) {\n          throw new Error('Failed to fetch check details');\n        }\n\n        const checkData = await checkResponse.json();\n        setCheck(checkData);\n\n        // Fetch check logs with pagination\n        const logsResponse = await fetch(`/health/api/checks/${checkId}/logs/?page=${currentPage}&page_size=${logsPerPage}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n        });\n\n        if (!logsResponse.ok) {\n          throw new Error('Failed to fetch check logs');\n        }\n\n        const logsData = await logsResponse.json();\n        \n        // Handle pagination data\n        if (logsData.results && Array.isArray(logsData.results)) {\n          setLogs(logsData.results);\n          setTotalPages(Math.ceil(logsData.count / logsPerPage));\n        } else if (Array.isArray(logsData)) {\n          // If the API doesn't return paginated data, handle the array directly\n          setLogs(logsData);\n          setTotalPages(Math.ceil(logsData.length / logsPerPage));\n        } else {\n          console.error('Unexpected logs response format:', logsData);\n          setLogs([]);\n          setTotalPages(1);\n        }\n      } catch (err) {\n        console.error('Error fetching check logs:', err);\n        setError(err.message || 'An error occurred while fetching check logs');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCheckLogs();\n  }, [checkId, currentPage, logsPerPage]);\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/users/logout/', {\n        method: 'POST',\n        credentials: 'include',\n      });\n      \n      // Clear local storage and state\n      localStorage.removeItem('user');\n      \n      // Redirect to login page\n      navigate('/login');\n    } catch (err) {\n      console.error('Logout failed:', err);\n      setError('Failed to logout. Please try again.');\n    }\n  };\n\n  const handlePageChange = (page) => {\n    if (page < 1 || page > totalPages) return;\n    setCurrentPage(page);\n  };\n\n  const formatTime = (timeString) => {\n    if (!timeString) return 'N/A';\n    const date = new Date(timeString);\n    return date.toLocaleString();\n  };\n\n  const getStatusClass = (status) => {\n    return status ? 'status-up' : 'status-down';\n  };\n\n  const getStatusText = (status) => {\n    return status ? 'Up' : 'Down';\n  };\n\n  const getResponseTimeDisplay = (time) => {\n    if (time === null || time === undefined) return 'N/A';\n    return `${time.toFixed(2)} ms`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner large\"></div>\n        <p>Loading check logs...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">Error: {error}</p>\n        <p>Please try refreshing the page or contact support if the problem persists.</p>\n        <button \n          onClick={() => navigate('/health-checks')} \n          className=\"btn btn-primary\"\n        >\n          Back to Health Checks\n        </button>\n      </div>\n    );\n  }\n\n  if (!check) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">Check not found</p>\n        <button \n          onClick={() => navigate('/health-checks')} \n          className=\"btn btn-primary\"\n        >\n          Back to Health Checks\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <div className=\"header-left\">\n          <img src={logo} alt=\"Poly-Agent Logo\" className=\"dashboard-logo\" />\n          <h1>Check Logs</h1>\n        </div>\n        <div className=\"header-right\">\n          <nav className=\"dashboard-nav\">\n            <Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\n            <Link to=\"/health-checks\" className=\"nav-link\">Health Checks</Link>\n            <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\n          </nav>\n          <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n        </div>\n      </header>\n\n      <main className=\"dashboard-content\">\n        <div className=\"check-logs-header\">\n          <h2>{check.name} - Logs</h2>\n          <Link \n            to={`/check/${checkId}`} \n            className=\"btn btn-secondary\"\n          >\n            Back to Check Details\n          </Link>\n        </div>\n\n        <div className=\"check-logs-container\">\n          {logs.length > 0 ? (\n            <div className=\"logs-table-card\">\n              <table className=\"logs-table\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>Status</th>\n                    <th>Response Time</th>\n                    <th>Status Code</th>\n                    <th>Error</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {logs.map((log, index) => (\n                    <tr key={index}>\n                      <td>{formatTime(log.timestamp)}</td>\n                      <td>\n                        <span className={`status-badge ${getStatusClass(log.status)}`}>\n                          {getStatusText(log.status)}\n                        </span>\n                      </td>\n                      <td>{getResponseTimeDisplay(log.response_time)}</td>\n                      <td>{log.status_code || 'N/A'}</td>\n                      <td className=\"log-error\">{log.error || '-'}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"no-logs-message\">\n              No logs available for this check.\n            </div>\n          )}\n\n          {totalPages > 1 && (\n            <div className=\"pagination\">\n              <button \n                onClick={() => handlePageChange(currentPage - 1)} \n                disabled={currentPage === 1}\n                className=\"pagination-btn\"\n              >\n                Previous\n              </button>\n              \n              <div className=\"pagination-info\">\n                Page {currentPage} of {totalPages}\n              </div>\n              \n              <button \n                onClick={() => handlePageChange(currentPage + 1)} \n                disabled={currentPage === totalPages}\n                className=\"pagination-btn\"\n              >\n                Next\n              </button>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default CheckLogsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}